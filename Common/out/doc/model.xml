<?xml version="1.0" encoding="utf-8"?>
<Model name="SKeyCommon" id="SKeyCommon" language="delphi">
  <Package name="Model" id="ID=3">
    <Package name="SessionServer" id="ID=9">
      <Classifier name="ILicensePersister" id="ID=1065" type="Interface" visibility="public">
        <Property name="Persistent">False</Property>
        <Uses />
        <Method id="ID=1070" name="AddLicense" isSubroutine="true" visibility="public">
          <Parameter elementName="ALicense" id="ID3=1070_47647192" type="ISWLicense" isPrimitive="true" />
          <Property name="Reintroduce">False</Property>
          <ReturnType id="ID=1070" type="" isPrimitive="true" />
        </Method>
      </Classifier>
      <DesignElement name="Note1" id="ID=989" metaclass="Note">
        <Property name="TextOnly">False</Property>
        <Property name="Text">Il SessionServer mantiene un elenco delle licenze gestite in un campo privato protetto&lt;br /&gt;da un oggetto Locker (TMonitor) per il multithreading.&lt;br /&gt;Poi anche ogni licenza ha il suo Locker per bloccarla quanco un thread ci deve lavorare&lt;br /&gt;(es: per refresh sessione, persistenza, sincronizzazione) in modo da avere un doppio&lt;br /&gt;livello di bloccaggio e mantenere bloccato l'intero SessionServer&lt;br /&gt;(quindi tutte le licenze) solo per lo stretto necessario.&lt;br /&gt;</Property>
        <Link targetName="Note Link1" id="ID=1011" metaclass="Note Link" idref="ID=989">
          <Property name="Client">Model.SessionServer.ISessionServer</Property>
          <Property name="Supplier">Model.SessionServer.Note1</Property>
        </Link>
      </DesignElement>
      <DesignElement name="Note2" id="ID=990" metaclass="Note">
        <Property name="TextOnly">False</Property>
        <Property name="Text">Il SessionServer non memorizza e quindi non sa&lt;br /&gt;su quali licenze dovrà lavorare al suo avvio, lo saprà nel momento in cui verrà interrogato&lt;br /&gt;da qualche applicazione che usa l'apposito componente client del SKey.&lt;br /&gt;All'avvio carica tutte le eventuali sessioni presenti nel suo DB (di qualunque tipo sia)&lt;br /&gt;in modo da averle in memoria per il suo funzionamento.&lt;br /&gt;Le licenze saranno persistite dopo essere state rinfrescate/sincronizzate con&lt;br /&gt;una chiamata al Licence Server.&lt;br /&gt;Le Sessioni saranno persistite dopo ogni polling (da parte di un client) con un&lt;br /&gt;io.Persist passando la lista delle sessioni presente nella licenza e verranno&lt;br /&gt;persistite solo le sessioni che sono cambiate (ObjStatus property).</Property>
        <Link targetName="Note Link1" id="ID=1013" metaclass="Note Link" idref="ID=990">
          <Property name="Client">Model.SessionServer.ISessionServer</Property>
          <Property name="Supplier">Model.SessionServer.Note2</Property>
        </Link>
      </DesignElement>
      <DesignElement name="Note4" id="ID=991" metaclass="Note">
        <Property name="TextOnly">False</Property>
        <Property name="Text">SINGLETON&lt;br /&gt;SINGLETON&lt;br /&gt;</Property>
        <Link targetName="Note Link1" id="ID=1015" metaclass="Note Link" idref="ID=991">
          <Property name="Client">Model.SessionServer.ISessionServer</Property>
          <Property name="Supplier">Model.SessionServer.Note4</Property>
        </Link>
      </DesignElement>
      <DesignElement name="Note7" id="ID=1059" metaclass="Note">
        <Property name="TextOnly">False</Property>
        <Property name="Text">Il Locker del SessionServer sarà mantenuto&lt;br /&gt;in un campo privato e non sarà&lt;br /&gt;visibile all'esterno</Property>
        <Link targetName="Note Link1" id="ID=1061" metaclass="Note Link" idref="ID=1059">
          <Property name="Client">Model.BaseIntf.ILocker</Property>
          <Property name="Supplier">Model.SessionServer.Note7</Property>
        </Link>
        <Link targetName="Note Link2" id="ID=1063" metaclass="Note Link" idref="ID=1059">
          <Property name="Client">Model.SessionServer.ISessionServer</Property>
          <Property name="Supplier">Model.SessionServer.Note7</Property>
        </Link>
      </DesignElement>
      <DesignElement name="Note8" id="ID=1072" metaclass="Note">
        <Property name="TextOnly">False</Property>
        <Property name="Text">Il persister crea al suo interno un thread separato&lt;br /&gt;per le chiamate ad iORM in modo che&lt;br /&gt;queste non influiscano con il normale lavoro del SessionServer&lt;br /&gt;di refresh e sincronizzazione delle licenze e sessioni</Property>
        <Link targetName="Note Link1" id="ID=1076" metaclass="Note Link" idref="ID=1072">
          <Property name="Client">Model.SessionServer.ILicensePersister</Property>
          <Property name="Supplier">Model.SessionServer.Note8</Property>
        </Link>
      </DesignElement>
      <DesignElement name="Note9" id="ID=1074" metaclass="Note">
        <Property name="TextOnly">False</Property>
        <Property name="Text">Mantiene al suo interno una lista di Licenze da persistere.&lt;br /&gt;Tale lista sarà protetta internamente da un ILocker perchè&lt;br /&gt;il persister  stesso possa aggiungere e licenze da e il PersisterThread&lt;br /&gt;possa invece accedervi senza problemi</Property>
        <Link targetName="Note Link1" id="ID=1078" metaclass="Note Link" idref="ID=1074">
          <Property name="Client">Model.SessionServer.ILicensePersister</Property>
          <Property name="Supplier">Model.SessionServer.Note9</Property>
        </Link>
      </DesignElement>
      <DesignElement name="Note10" id="ID=1080" metaclass="Note">
        <Property name="TextOnly">False</Property>
        <Property name="Text">Prima di persistere una licenza dovrà ottenerne&lt;br /&gt;il lock dal Locker</Property>
        <Link targetName="Note Link1" id="ID=1082" metaclass="Note Link" idref="ID=1080">
          <Property name="Client">Model.SessionServer.ILicensePersister</Property>
          <Property name="Supplier">Model.SessionServer.Note10</Property>
        </Link>
      </DesignElement>
      <Diagram name="SessionServer" id="ID=997" metaclass="Namespace Diagram" file="default.txvpck.html">
        <Property name="defaultDiagram">true</Property>
        <DiagramReference id="ID=999" element="ID=988" metaclass="Module">
          <Property name="Gradient ON">False</Property>
          <Property name="Gradient color 2">255, 255, 255</Property>
          <Property name="Gradient color 1">255, 255, 255</Property>
          <Property name="Color Area">Whole Shape</Property>
          <Property name="Gradient Mode">Vertical</Property>
        </DiagramReference>
        <DiagramReference id="ID=1000" element="ID=987" metaclass="Interface">
          <Property name="Gradient ON">False</Property>
          <Property name="Gradient color 2">255, 255, 255</Property>
          <Property name="Gradient color 1">255, 255, 255</Property>
          <Property name="Color Area">Whole Shape</Property>
          <Property name="Persistent">False</Property>
          <Property name="Circle view">False</Property>
          <Property name="Gradient Mode">Vertical</Property>
          <Property name="bounds">400,200,1160,311</Property>
          <DiagramReference id="ID=1058" element="ID=1057" metaclass="Dependency Link">
            <Property name="Client">Model.SessionServer.ISessionServer</Property>
            <Property name="Supplier">Model.BaseIntf.ILocker</Property>
          </DiagramReference>
        </DiagramReference>
        <DiagramReference id="ID=1001" element="ID=989" metaclass="Note">
          <Property name="Gradient ON">False</Property>
          <Property name="Gradient color 1">255, 255, 255</Property>
          <Property name="Gradient Mode">Vertical</Property>
          <Property name="Color Area">Whole Shape</Property>
          <Property name="TextOnly">False</Property>
          <Property name="Text">Il SessionServer mantiene un elenco delle licenze gestite in un campo privato protetto&lt;br /&gt;da un oggetto Locker (TMonitor) per il multithreading.&lt;br /&gt;Poi anche ogni licenza ha il suo Locker per bloccarla quanco un thread ci deve lavorare&lt;br /&gt;(es: per refresh sessione, persistenza, sincronizzazione) in modo da avere un doppio&lt;br /&gt;livello di bloccaggio e mantenere bloccato l'intero SessionServer&lt;br /&gt;(quindi tutte le licenze) solo per lo stretto necessario.&lt;br /&gt;</Property>
          <Property name="Gradient color 2">255, 255, 255</Property>
          <Property name="Backward">False</Property>
          <Property name="bounds">80,80,571,169</Property>
          <DiagramReference id="ID=1012" element="ID=1011" metaclass="Note Link">
            <Property name="Client">Model.SessionServer.ISessionServer</Property>
            <Property name="Supplier">Model.SessionServer.Note1</Property>
          </DiagramReference>
        </DiagramReference>
        <DiagramReference id="ID=1002" element="ID=990" metaclass="Note">
          <Property name="Gradient ON">False</Property>
          <Property name="Gradient color 1">255, 255, 255</Property>
          <Property name="Gradient Mode">Vertical</Property>
          <Property name="Color Area">Whole Shape</Property>
          <Property name="TextOnly">False</Property>
          <Property name="Text">Il SessionServer non memorizza e quindi non sa&lt;br /&gt;su quali licenze dovrà lavorare al suo avvio, lo saprà nel momento in cui verrà interrogato&lt;br /&gt;da qualche applicazione che usa l'apposito componente client del SKey.&lt;br /&gt;All'avvio carica tutte le eventuali sessioni presenti nel suo DB (di qualunque tipo sia)&lt;br /&gt;in modo da averle in memoria per il suo funzionamento.&lt;br /&gt;Le licenze saranno persistite dopo essere state rinfrescate/sincronizzate con&lt;br /&gt;una chiamata al Licence Server.&lt;br /&gt;Le Sessioni saranno persistite dopo ogni polling (da parte di un client) con un&lt;br /&gt;io.Persist passando la lista delle sessioni presente nella licenza e verranno&lt;br /&gt;persistite solo le sessioni che sono cambiate (ObjStatus property).</Property>
          <Property name="Gradient color 2">255, 255, 255</Property>
          <Property name="Backward">False</Property>
          <Property name="bounds">120,400,621,544</Property>
          <DiagramReference id="ID=1014" element="ID=1013" metaclass="Note Link">
            <Property name="Client">Model.SessionServer.ISessionServer</Property>
            <Property name="Supplier">Model.SessionServer.Note2</Property>
          </DiagramReference>
        </DiagramReference>
        <DiagramReference id="ID=1003" element="ID=991" metaclass="Note">
          <Property name="Gradient ON">False</Property>
          <Property name="Gradient color 1">255, 255, 255</Property>
          <Property name="Gradient Mode">Vertical</Property>
          <Property name="Color Area">Whole Shape</Property>
          <Property name="TextOnly">False</Property>
          <Property name="Text">SINGLETON&lt;br /&gt;SINGLETON&lt;br /&gt;</Property>
          <Property name="Gradient color 2">255, 255, 255</Property>
          <Property name="Backward">False</Property>
          <Property name="bounds">660,80,746,115</Property>
          <DiagramReference id="ID=1016" element="ID=1015" metaclass="Note Link">
            <Property name="Client">Model.SessionServer.ISessionServer</Property>
            <Property name="Supplier">Model.SessionServer.Note4</Property>
          </DiagramReference>
        </DiagramReference>
        <DiagramReference id="ID=1004">
          <Property name="bounds">10,10,221,52</Property>
        </DiagramReference>
        <DiagramReference id="ID=1044" isShortcut="true">
          <Property name="Gradient ON">False</Property>
          <Property name="Gradient color 2">255, 255, 255</Property>
          <Property name="Gradient color 1">255, 255, 255</Property>
          <Property name="Color Area">Whole Shape</Property>
          <Property name="Persistent">False</Property>
          <Property name="Circle view">False</Property>
          <Property name="Gradient Mode">Vertical</Property>
          <Property name="bounds">840,40,986,136</Property>
        </DiagramReference>
        <DiagramReference id="ID=1060" element="ID=1059" metaclass="Note">
          <Property name="Gradient ON">False</Property>
          <Property name="Gradient color 1">255, 255, 255</Property>
          <Property name="Gradient Mode">Vertical</Property>
          <Property name="Color Area">Whole Shape</Property>
          <Property name="TextOnly">False</Property>
          <Property name="Text">Il Locker del SessionServer sarà mantenuto&lt;br /&gt;in un campo privato e non sarà&lt;br /&gt;visibile all'esterno</Property>
          <Property name="Gradient color 2">255, 255, 255</Property>
          <Property name="Backward">False</Property>
          <Property name="bounds">1080,60,1334,109</Property>
          <DiagramReference id="ID=1062" element="ID=1061" metaclass="Note Link">
            <Property name="Client">Model.BaseIntf.ILocker</Property>
            <Property name="Supplier">Model.SessionServer.Note7</Property>
          </DiagramReference>
          <DiagramReference id="ID=1064" element="ID=1063" metaclass="Note Link">
            <Property name="Client">Model.SessionServer.ISessionServer</Property>
            <Property name="Supplier">Model.SessionServer.Note7</Property>
          </DiagramReference>
        </DiagramReference>
        <DiagramReference id="ID=1066" element="ID=1065" metaclass="Interface">
          <Property name="Gradient ON">False</Property>
          <Property name="Gradient color 2">255, 255, 255</Property>
          <Property name="Gradient color 1">255, 255, 255</Property>
          <Property name="Color Area">Whole Shape</Property>
          <Property name="Persistent">False</Property>
          <Property name="Circle view">False</Property>
          <Property name="Gradient Mode">Vertical</Property>
          <Property name="bounds">680,640,900,721</Property>
        </DiagramReference>
        <DiagramReference id="ID=1073" element="ID=1072" metaclass="Note">
          <Property name="Gradient ON">False</Property>
          <Property name="Gradient color 1">255, 255, 255</Property>
          <Property name="Gradient Mode">Vertical</Property>
          <Property name="Color Area">Whole Shape</Property>
          <Property name="TextOnly">False</Property>
          <Property name="Text">Il persister crea al suo interno un thread separato&lt;br /&gt;per le chiamate ad iORM in modo che&lt;br /&gt;queste non influiscano con il normale lavoro del SessionServer&lt;br /&gt;di refresh e sincronizzazione delle licenze e sessioni</Property>
          <Property name="Gradient color 2">255, 255, 255</Property>
          <Property name="Backward">False</Property>
          <Property name="bounds">940,500,1298,562</Property>
          <DiagramReference id="ID=1077" element="ID=1076" metaclass="Note Link">
            <Property name="Client">Model.SessionServer.ILicensePersister</Property>
            <Property name="Supplier">Model.SessionServer.Note8</Property>
          </DiagramReference>
        </DiagramReference>
        <DiagramReference id="ID=1075" element="ID=1074" metaclass="Note">
          <Property name="Gradient ON">False</Property>
          <Property name="Gradient color 1">255, 255, 255</Property>
          <Property name="Gradient Mode">Vertical</Property>
          <Property name="Color Area">Whole Shape</Property>
          <Property name="TextOnly">False</Property>
          <Property name="Text">Mantiene al suo interno una lista di Licenze da persistere.&lt;br /&gt;Tale lista sarà protetta internamente da un ILocker perchè&lt;br /&gt;il persister  stesso possa aggiungere e licenze da e il PersisterThread&lt;br /&gt;possa invece accedervi senza problemi</Property>
          <Property name="Gradient color 2">255, 255, 255</Property>
          <Property name="Backward">False</Property>
          <Property name="bounds">1000,800,1394,862</Property>
          <DiagramReference id="ID=1079" element="ID=1078" metaclass="Note Link">
            <Property name="Client">Model.SessionServer.ILicensePersister</Property>
            <Property name="Supplier">Model.SessionServer.Note9</Property>
          </DiagramReference>
        </DiagramReference>
        <DiagramReference id="ID=1081" element="ID=1080" metaclass="Note">
          <Property name="Gradient ON">False</Property>
          <Property name="Gradient color 1">255, 255, 255</Property>
          <Property name="Gradient Mode">Vertical</Property>
          <Property name="Color Area">Whole Shape</Property>
          <Property name="TextOnly">False</Property>
          <Property name="Text">Prima di persistere una licenza dovrà ottenerne&lt;br /&gt;il lock dal Locker</Property>
          <Property name="Gradient color 2">255, 255, 255</Property>
          <Property name="Backward">False</Property>
          <Property name="bounds">1080,660,1353,695</Property>
          <DiagramReference id="ID=1083" element="ID=1082" metaclass="Note Link">
            <Property name="Client">Model.SessionServer.ILicensePersister</Property>
            <Property name="Supplier">Model.SessionServer.Note10</Property>
          </DiagramReference>
        </DiagramReference>
      </Diagram>
      <Classifier name="globals SessionServer" id="ID=988" type="Module" visibility="public">
        <Uses />
      </Classifier>
      <Classifier name="ISessionServer" id="ID=987" type="Interface" visibility="public">
        <Property name="Persistent">False</Property>
        <Uses />
        <Method id="ID=1005" name="SessionDispose" isSubroutine="true" visibility="public">
          <Parameter elementName="AlicenseID" id="ID3=1005_13379899" type="Integer" systemType="Integer" isPrimitive="false" />
          <Parameter elementName="ASessionID" id="ID3=1005_53310234" type="Integer" systemType="Integer" isPrimitive="false" />
          <Property name="Reintroduce">False</Property>
          <ReturnType id="ID=1005" type="" isPrimitive="true" />
        </Method>
        <Method id="ID=1006" name="SessionPoll" visibility="public">
          <Parameter elementName="AlicenseID" id="ID3=1006_10030064" type="Integer" systemType="Integer" isPrimitive="false" />
          <Parameter elementName="ASessionID" id="ID3=1006_23161718" type="Integer" systemType="Integer" isPrimitive="false" />
          <Parameter elementName="AActivationKey" id="ID3=1006_7128878" type="string" isPrimitive="true" />
          <Parameter elementName="AHWSign" id="ID3=1006_64159903" type="string" isPrimitive="true" />
          <Parameter elementName="AUserName" id="ID3=1006_40568220" type="string" isPrimitive="true" />
          <Parameter elementName="APassword" id="ID3=1006_29569660" type="string" isPrimitive="true" />
          <Property name="Reintroduce">False</Property>
          <Property name="Returns">string</Property>
          <ReturnType id="ID=1006" type="string" isPrimitive="true" />
        </Method>
        <Method id="ID=1007" name="SessionNew" visibility="public">
          <Parameter elementName="AlicenseID" id="ID3=1007_64800354" type="Integer" systemType="Integer" isPrimitive="false" />
          <Parameter elementName="AActivationKey" id="ID3=1007_46332278" type="string" isPrimitive="true" />
          <Parameter elementName="AHWSign" id="ID3=1007_14337321" type="string" isPrimitive="true" />
          <Parameter elementName="AUserName" id="ID3=1007_61927028" type="string" isPrimitive="true" />
          <Parameter elementName="APassword" id="ID3=1007_20472344" type="string" isPrimitive="true" />
          <Property name="Reintroduce">False</Property>
          <Property name="Returns">string</Property>
          <ReturnType id="ID=1007" type="string" isPrimitive="true" />
        </Method>
      </Classifier>
    </Package>
  </Package>
</Model>