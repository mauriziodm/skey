<?xml version="1.0" encoding="utf-8"?>
<nodeSet version="1.0">
  <view uin="zyy64bw5jrqdj48vt_v">
    <property name="$defaultDiagram" value="true" />
    <property name="$metaclass" value="Package Diagram" />
    <property name="$name" value="default" />
    <reference referencedUin="delphi:e_class:src:SKeyCommon:Model.CustomerIntf.@unitclass">
      <property name="$shortcutReference" value="true" />
    </reference>
    <reference referencedUin="delphi:e_class:src:SKeyCommon:Model.CustomerIntf.ISWLicense">
      <property name="$shortcutReference" value="true" />
      <property name="background_color" value="255, 192, 192" />
      <property name="bounds" value="60,280,354,600" />
      <property name="location_set_by_user" value="True" />
      <property name="bounds_setted_by_user" value="True" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWLicense.ActiveSince" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWLicense.SetActiveSince(System.TDate)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWLicense.GetActiveSince()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWLicense.Expiration" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWLicense.GetExpiration()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWLicense.IsActive" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWLicense.GetIsActive()" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWLicense.RevertToModel()">
        <property name="bounds" value="175,-3,0,0" />
      </reference>
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWLicense.LicenseModel" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWLicense.GetLicenseModel()" />
      <reference referencedUin="design:link:::8gxgxp7qwsdt27cse_l">
        <property name="sourceAnchor" value="238,880" />
        <property name="targetAnchor" value="238,960" />
        <property name="bendpoints" value="" />
        <reference referencedUin="label:@label:design:link:::8gxgxp7qwsdt27cse_l">
          <property name="bounds" value="169,912,66,16" />
        </reference>
      </reference>
      <reference referencedUin="delphi:l_gnt:src:SKeyCommon:Model.CustomerIntf.ISWLicense:Model.SWHouseIntf.ISWLicenseModel">
        <property name="sourceAnchor" value="230,880" />
        <property name="targetAnchor" value="230,960" />
        <property name="bendpoints" value="" />
      </reference>
      <reference referencedUin="delphi:l_ast:src:SKeyCommon:Model.CustomerIntf.ISWLicense.LicenseModel">
        <property name="sourceAnchor" value="222,880" />
        <property name="targetAnchor" value="222,960" />
        <property name="bendpoints" value="" />
      </reference>
      <reference referencedUin="design:link:::sa0kttwf7vr_l">
        <property name="sourceAnchor" value="414,490" />
        <property name="targetAnchor" value="840,489" />
        <property name="bendpoints" value="" />
        <reference referencedUin="label:@clientRole:design:link:::sa0kttwf7vr_l">
          <property name="bounds" value="424,493,11,16" />
        </reference>
        <reference referencedUin="label:@supplierRole:design:link:::sa0kttwf7vr_l">
          <property name="bounds" value="807,492,23,16" />
        </reference>
      </reference>
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWLicense.Sessions" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWLicense.GetSessions()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWLicense.State" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWLicense.GetState()" />
      <reference referencedUin="delphi:l_ast:src:SKeyCommon:Model.CustomerIntf.ISWLicense.State">
        <property name="sourceAnchor" value="414,609" />
        <property name="targetAnchor" value="440,609" />
        <property name="bendpoints" value="" />
      </reference>
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWLicense.Note" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWLicense.SetNote(System.string)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWLicense.GetNote()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWLicense.Hash" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWLicense.SetHash(System.string)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWLicense.GetHash()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWLicense.IsSuspended" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWLicense.GetIsSuspended()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWLicense.IsExpired" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWLicense.GetIsExpired()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWLicense.CounterHW" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWLicense.GetCounterHW()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWLicense.CounterAppUsers" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWLicense.GetCounterAppUsers()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWLicense.CounterSessions" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWLicense.GetCounterSessions()" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWLicense.SetState(Model.CustomerIntf.TSWLicenseState)" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWLicense.Users" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWLicense.GetUsers()" />
      <reference referencedUin="design:link:::d1bwa9wqjek83acle_l">
        <property name="sourceAnchor" value="414,388" />
        <property name="targetAnchor" value="500,388" />
        <property name="bendpoints" value="" />
        <reference referencedUin="label:@supplierRole:design:link:::d1bwa9wqjek83acle_l">
          <property name="bounds" value="467,391,23,16" />
        </reference>
        <reference referencedUin="label:@clientRole:design:link:::d1bwa9wqjek83acle_l">
          <property name="bounds" value="424,391,11,16" />
        </reference>
      </reference>
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWLicense.SetUsers(System.Generics.Collections.TList&lt;Model.CustomerIntf.ISWLicenseUser&gt;)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:SKeyCommon:Model.CustomerIntf.ICustomer">
      <property name="$shortcutReference" value="true" />
      <property name="background_color" value="255, 192, 192" />
      <property name="bounds" value="60,40,183,97" />
      <property name="location_set_by_user" value="True" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ICustomer.GetLicenses()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ICustomer.Licenses" />
      <reference referencedUin="design:link:::00sey00cs908cw0wr_l">
        <property name="sourceAnchor" value="151,137" />
        <property name="targetAnchor" value="151,280" />
        <property name="bendpoints" value="" />
        <reference referencedUin="label:@clientRole:design:link:::00sey00cs908cw0wr_l">
          <property name="bounds" value="137,141,11,16" />
        </reference>
        <reference referencedUin="label:@supplierRole:design:link:::00sey00cs908cw0wr_l">
          <property name="bounds" value="125,254,23,16" />
        </reference>
      </reference>
    </reference>
    <reference referencedUin="delphi:e_class:src:SKeyCommon:Model.CustomerIntf.ISWSession">
      <property name="$shortcutReference" value="true" />
      <property name="background_color" value="255, 192, 192" />
      <property name="bounds" value="840,220,242,800" />
      <property name="location_set_by_user" value="True" />
      <property name="bounds_setted_by_user" value="True" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWSession.SignHW" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWSession.GetSignHW()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWSession.ActiveSince" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWSession.GetActiveSince()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWSession.Expiration" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWSession.GetExpiration()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWSession.OverbookedCount" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWSession.SetOverbookedCount(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWSession.GetOverbookedCount()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWSession.State" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWSession.SetState(Model.CustomerIntf.TSWSessionState)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWSession.GetState()" />
      <reference referencedUin="delphi:l_ast:src:SKeyCommon:Model.CustomerIntf.ISWSession.State">
        <property name="sourceAnchor" value="1082,364" />
        <property name="targetAnchor" value="1160,364" />
        <property name="bendpoints" value="" />
      </reference>
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWSession.LicenseID" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWSession.SetLicenseID(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWSession.GetLicenseID()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWSession.Hash" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWSession.SetHash(System.string)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWSession.GetHash()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWSession.Payload" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWSession.SetPayload(System.string)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWSession.GetPayload()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWSession.IsActive" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWSession.GetIsActive()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWSession.SignAppUser" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWSession.SetSignAppUser(System.string)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWSession.GetSignAppUser()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWSession.IsOverbooked" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWSession.GetIsOverbooked()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWSession.IsExpired" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWSession.GetIsExpired()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWSession.IsDisposed" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWSession.GetIsDisposed()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWSession.OverbookedMax" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWSession.SetOverbookedMax(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWSession.GetOverbookedMax()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWSession.PollingIntervalMinutes" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWSession.SetPollingIntervalMinutes(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWSession.GetPollingIntervalMinutes()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWSession.PollingLast" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWSession.SetPollingLast(System.TDateTime)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWSession.GetPollingLast()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWSession.PollingIntervalExpired" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWSession.GetPollingIntervalExpired()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWSession.PayLoadUser" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWSession.SetPayLoadUser(System.string)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWSession.GetPayLoadUser()" />
    </reference>
    <reference referencedUin="delphi:e_class:src:SKeyCommon:Model.CustomerIntf.ISWSessionManager">
      <property name="$shortcutReference" value="true" />
      <property name="background_color" value="255, 192, 192" />
      <property name="bounds" value="520,40,240,180" />
      <property name="location_set_by_user" value="True" />
      <property name="bounds_setted_by_user" value="True" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWSessionManager.NewSession(System.Integer,System.string,System.string,System.string,System.string)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWSessionManager.ReleaseSessionToken()">
        <property name="bounds" value="155,11,0,0" />
      </reference>
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWSessionManager.PollSession(System.Integer,System.Integer,System.string,System.string,System.string,System.string)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWSessionManager.DisposeSession(System.Integer,System.Integer)" />
    </reference>
    <reference referencedUin="delphi:e_class:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel">
      <property name="$shortcutReference" value="true" />
      <property name="background_color" value="224, 224, 224" />
      <property name="bounds" value="60,960,360,740" />
      <property name="foreground_color" value="128, 128, 128" />
      <property name="location_set_by_user" value="True" />
      <property name="bounds_setted_by_user" value="True" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.SetMaxSessionCount(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.GetMaxSessionCount()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.MaxSessionCount" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.SetUserAuthentication(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.GetUserAuthentication()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.UserAuthentication" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.SetExpirationDaysTolerance(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.GetExpirationDaysTolerance()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.ExpirationDaysTolerance" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.SetSessionServer(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.GetSessionServer()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.SessionServer" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.SetSessionServerExpirationMinutes(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.GetSessionServerExpirationMinutes()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.SessionServerExpirationMinutes" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.SetPayload(System.string)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.GetPayload()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.Payload" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.SetExpirationDays(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.GetExpirationDays()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.ExpirationDays" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.SessionServerPollingIntervalMinutes" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.SetSessionServerPollingIntervalMinutes(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.GetSessionServerPollingIntervalMinutes()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.MaxHWCount" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.SetMaxHWCount(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.GetMaxHWCount()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.MaxAppUserCount" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.SetMaxAppUserCount(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.GetMaxAppUserCount()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.SessionPollingIntervalMinutes" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.SetSessionPollingINtervalMinutes(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.GetSessionPollingINtervalMinutes()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.OverbookingMaxCycles" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.SetOverbookingMaxCycles(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.GetOverbookingMaxCycles()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.ProductID" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.SetProductID(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.GetProductID()" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.SetSessionExpirationMinutes(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.GetSessionExpirationMinutes()" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.SessionExpirationMinutes" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.ExpirationDaysWarning" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.SetExpirationDaysWarning(System.Integer)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel.GetExpirationDaysWarning()" />
    </reference>
    <reference referencedUin="design:node:::y5f4a8d9v3njn50ft_n">
      <property name="$shortcutReference" value="true" />
      <property name="bounds" value="880,980,50,30" />
      <property name="foreground_color" value="192, 0, 0" />
      <property name="location_set_by_user" value="True" />
    </reference>
    <reference referencedUin="delphi:e_class:src:SKeyCommon:Model.CustomerIntf.TSWSessionState">
      <property name="$shortcutReference" value="true" />
      <property name="bounds" value="1160,300,134,128" />
      <property name="location_set_by_user" value="True" />
      <reference referencedUin="delphi:e_field:src:SKeyCommon:Model.CustomerIntf.TSWSessionState.ssExpired" />
      <reference referencedUin="delphi:e_field:src:SKeyCommon:Model.CustomerIntf.TSWSessionState.ssOverbooked" />
      <reference referencedUin="delphi:e_field:src:SKeyCommon:Model.CustomerIntf.TSWSessionState.ssActive" />
      <reference referencedUin="delphi:e_field:src:SKeyCommon:Model.CustomerIntf.TSWSessionState.ssDisposed" />
      <reference referencedUin="delphi:e_field:src:SKeyCommon:Model.CustomerIntf.TSWSessionState.ssExpiredOverbooked" />
    </reference>
    <reference referencedUin="delphi:e_class:src:SKeyCommon:Model.CustomerIntf.TSKeyClientComponent">
      <property name="$shortcutReference" value="true" />
      <property name="bounds" value="520,960,209,400" />
      <property name="location_set_by_user" value="True" />
      <property name="bounds_setted_by_user" value="True" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.TSKeyClientComponent.LicenseID" />
      <reference referencedUin="delphi:e_field:src:SKeyCommon:Model.CustomerIntf.TSKeyClientComponent.FLicenseID" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.TSKeyClientComponent.SetLicenseID(System.Integer)" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.TSKeyClientComponent.UserName" />
      <reference referencedUin="delphi:e_field:src:SKeyCommon:Model.CustomerIntf.TSKeyClientComponent.FUserName" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.TSKeyClientComponent.SetUserName(System.string)" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.TSKeyClientComponent.Password" />
      <reference referencedUin="delphi:e_field:src:SKeyCommon:Model.CustomerIntf.TSKeyClientComponent.FPassword" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.TSKeyClientComponent.SetPassword(System.string)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.TSKeyClientComponent.OpenSession()" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.TSKeyClientComponent.CloseSession()">
        <property name="bounds" value="135,13,0,0" />
      </reference>
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.TSKeyClientComponent.ActivationKey" />
      <reference referencedUin="delphi:e_field:src:SKeyCommon:Model.CustomerIntf.TSKeyClientComponent.FActivationKey" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.TSKeyClientComponent.SetActivationKey(System.string)" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.TSKeyClientComponent.Session" />
      <reference referencedUin="delphi:e_field:src:SKeyCommon:Model.CustomerIntf.TSKeyClientComponent.FSession" />
      <reference referencedUin="delphi:l_ast:src:SKeyCommon:Model.CustomerIntf.TSKeyClientComponent.FSession">
        <property name="sourceAnchor" value="729,990" />
        <property name="targetAnchor" value="840,990" />
        <property name="bendpoints" value="" />
      </reference>
      <reference referencedUin="delphi:l_ast:src:SKeyCommon:Model.CustomerIntf.TSKeyClientComponent.Session">
        <property name="sourceAnchor" value="729,982" />
        <property name="targetAnchor" value="840,982" />
        <property name="bendpoints" value="" />
      </reference>
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.TSKeyClientComponent.DisposeSessionOnClose" />
      <reference referencedUin="delphi:e_field:src:SKeyCommon:Model.CustomerIntf.TSKeyClientComponent.FDisposeSessionOnClose" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.TSKeyClientComponent.SetDisposeSessionOnClose(System.Boolean)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.TSKeyClientComponent.DisposeSession()">
        <property name="bounds" value="135,-2,0,0" />
      </reference>
    </reference>
    <reference referencedUin="design:node:::ch6ttj08bd6t3bg0q_n">
      <property name="$shortcutReference" value="true" />
      <property name="background_color" value="255, 255, 255" />
      <property name="bounds" value="780,1160,199,117" />
      <property name="foreground_color" value="0, 0, 0" />
      <property name="grd_area" value="WholeShape" />
      <property name="grd_mode" value="Vertical" />
      <property name="location_set_by_user" value="True" />
      <reference referencedUin="design:link:::goawcb2u51bnxj2bi_l:ch6ttj08bd6t3bg0q_n">
        <property name="sourceAnchor" value="729,1218" />
        <property name="targetAnchor" value="780,1218" />
        <property name="bendpoints" value="" />
      </reference>
    </reference>
    <reference referencedUin="delphi:e_class:src:SKeyCommon:Model.CustomerIntf.TSWLicenseState">
      <property name="$shortcutReference" value="true" />
      <property name="bounds" value="440,560,117,98" />
      <property name="location_set_by_user" value="True" />
      <reference referencedUin="delphi:e_field:src:SKeyCommon:Model.CustomerIntf.TSWLicenseState.lsSuspended" />
      <reference referencedUin="delphi:e_field:src:SKeyCommon:Model.CustomerIntf.TSWLicenseState.lsExpired" />
      <reference referencedUin="delphi:e_field:src:SKeyCommon:Model.CustomerIntf.TSWLicenseState.lsActive" />
    </reference>
    <reference referencedUin="design:node:::9khx2kwntp9sgmsik_n">
      <property name="$shortcutReference" value="true" />
      <property name="bounds" value="1160,480,330,89" />
      <property name="foreground_color" value="0, 0, 0" />
      <property name="location_set_by_user" value="True" />
      <reference referencedUin="design:link:::h1owkxitqonpl02pq_l:9khx2kwntp9sgmsik_n">
        <property name="sourceAnchor" value="1082,524" />
        <property name="targetAnchor" value="1160,524" />
        <property name="bendpoints" value="" />
      </reference>
    </reference>
    <reference referencedUin="design:node:::cos5pn0o0rtfp3b8h_n">
      <property name="$shortcutReference" value="true" />
      <property name="background_color" value="255, 255, 255" />
      <property name="bounds" value="440,680,340,102" />
      <property name="foreground_color" value="0, 0, 0" />
      <property name="location_set_by_user" value="True" />
      <property name="bounds_setted_by_user" value="True" />
      <reference referencedUin="design:link:::2v3j8not0pq_l:cos5pn0o0rtfp3b8h_n">
        <property name="sourceAnchor" value="840,731" />
        <property name="targetAnchor" value="780,731" />
        <property name="bendpoints" value="" />
      </reference>
      <reference referencedUin="design:link:::6ndkh02n5ej_l:cos5pn0o0rtfp3b8h_n">
        <property name="sourceAnchor" value="596,960" />
        <property name="targetAnchor" value="596,782" />
        <property name="bendpoints" value="" />
      </reference>
      <reference referencedUin="design:link:::3cv6y45upgciq7yps_l:cos5pn0o0rtfp3b8h_n">
        <property name="sourceAnchor" value="640,220" />
        <property name="targetAnchor" value="640,680" />
        <property name="bendpoints" value="" />
      </reference>
    </reference>
    <reference referencedUin="design:node:::aaqq27bxril5zgte_n">
      <property name="$shortcutReference" value="true" />
      <property name="bounds" value="1160,600,205,62" />
      <property name="location_set_by_user" value="True" />
      <reference referencedUin="design:link:::bai36javg97k9vu5s_l:aaqq27bxril5zgte_n">
        <property name="sourceAnchor" value="1082,630" />
        <property name="targetAnchor" value="1160,630" />
        <property name="bendpoints" value="" />
      </reference>
    </reference>
    <reference referencedUin="delphi:e_class:src:SKeyCommon:Model.CustomerIntf.ISWLicenseUser">
      <property name="$shortcutReference" value="true" />
      <property name="background_color" value="255, 192, 192" />
      <property name="bounds" value="500,340,129,97" />
      <property name="grd_color_one" value="255, 255, 255" />
      <property name="location_set_by_user" value="True" />
      <reference referencedUin="delphi:e_property:src:SKeyCommon:Model.CustomerIntf.ISWLicenseUser.Payload" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWLicenseUser.SetPayload(System.string)" />
      <reference referencedUin="delphi:e_method:src:SKeyCommon:Model.CustomerIntf.ISWLicenseUser.GetPayload()" />
    </reference>
  </view>
  <link uin="8gxgxp7qwsdt27cse_l">
    <property name="$description" value="" />
    <property name="$metaclass" value="Dependency Link" />
    <property name="$name" value="Dependency Link2" />
    <property name="@label" value="inherit from" />
    <participant referencedUin="delphi:e_class:src:SKeyCommon:Model.CustomerIntf.ISWLicense" role="Client" />
    <participant referencedUin="delphi:e_class:src:SKeyCommon:Model.SWHouseIntf.ISWLicenseModel" role="Supplier" />
  </link>
  <link uin="00sey00cs908cw0wr_l">
    <property name="$metaclass" value="Dependency Link" />
    <property name="$name" value="Dependency Link1" />
    <property name="@clientRole" value="1" />
    <property name="@supplierRole" value="0..*" />
    <participant referencedUin="delphi:e_class:src:SKeyCommon:Model.CustomerIntf.ICustomer" role="Client" />
    <participant referencedUin="delphi:e_class:src:SKeyCommon:Model.CustomerIntf.ISWLicense" role="Supplier" />
  </link>
  <link uin="sa0kttwf7vr_l">
    <property name="$metaclass" value="Dependency Link" />
    <property name="$name" value="Dependency Link4" />
    <property name="@clientRole" value="1" />
    <property name="@supplierRole" value="0..*" />
    <participant referencedUin="delphi:e_class:src:SKeyCommon:Model.CustomerIntf.ISWLicense" role="Client" />
    <participant referencedUin="delphi:e_class:src:SKeyCommon:Model.CustomerIntf.ISWSession" role="Supplier" />
  </link>
  <link uin="d1bwa9wqjek83acle_l">
    <property name="$metaclass" value="Dependency Link" />
    <property name="$name" value="Dependency Link3" />
    <property name="@clientRole" value="1" />
    <property name="@supplierRole" value="0..*" />
    <participant referencedUin="delphi:e_class:src:SKeyCommon:Model.CustomerIntf.ISWLicense" role="Client" />
    <participant referencedUin="delphi:e_class:src:SKeyCommon:Model.CustomerIntf.ISWLicenseUser" role="Supplier" />
  </link>
</nodeSet>