<?xml version="1.0" encoding="utf-8"?>
<nodeSet version="1.0">
  <node uin="y5f4a8d9v3njn50ft_n">
    <property name="$metaclass" value="Note" />
    <property name="$name" value="Note1" />
    <property name="$note_text" value="" />
    <property name="text_only" value="True" />
  </node>
  <node uin="ch6ttj08bd6t3bg0q_n">
    <property name="$metaclass" value="Note" />
    <property name="$name" value="Note3" />
    <property name="$note_text" value="Possibili event handlers:&#xD;&#xA;- onAfterSessionServerRequest&#xD;&#xA;- onBeforeSessionServerRequest&#xD;&#xA;- onBeforeOpen&#xD;&#xA;- onSessionStateChange&#xD;&#xA;- onSessionExpire&#xD;&#xA;- onLoginOK&#xD;&#xA;- onLoginKO" />
    <link uin="goawcb2u51bnxj2bi_l">
      <property name="$metaclass" value="Note Link" />
      <property name="$name" value="Note Link1" />
      <participant referencedUin="delphi:e_class:src:SKeyCommon:Model.CustomerIntf.TSKeyClientComponent" role="Client" />
      <participant referencedUin="design:node:::ch6ttj08bd6t3bg0q_n" role="Supplier" />
    </link>
  </node>
  <node uin="9khx2kwntp9sgmsik_n">
    <property name="$metaclass" value="Note" />
    <property name="$name" value="Note2" />
    <property name="$note_text" value="Solo locale sul session server? (in caso di session server)&#xD;&#xA;oppure viene trasmessa anche al license server&#xD;&#xA;mantenendo quindi uno storico di tute le sessioni create&#xD;&#xA;in precedenza?&#xD;&#xA;Dopo un pò magari le eliminiamo?&#xD;&#xA;Oppure le manteniamo tutte?&#xD;&#xA;" />
    <link uin="h1owkxitqonpl02pq_l">
      <property name="$metaclass" value="Note Link" />
      <property name="$name" value="Note Link1" />
      <participant referencedUin="delphi:e_class:src:SKeyCommon:Model.CustomerIntf.ISWSession" role="Client" />
      <participant referencedUin="design:node:::9khx2kwntp9sgmsik_n" role="Supplier" />
    </link>
  </node>
  <node uin="cos5pn0o0rtfp3b8h_n">
    <property name="$metaclass" value="Note" />
    <property name="$name" value="Note4" />
    <property name="$note_text" value="Persistite sul SessionServer?&#xD;&#xA;Il SessionServer ha un DB (SQLite/FirebirdEmbedded)?&#xD;&#xA;Il ClientComponent persiste la sessione&#xD;&#xA;localmente su un file di testo (JSON)?&#xD;&#xA;Se si il nome del file dovrebbe comprendere&#xD;&#xA;l'HWSign+AppUserSign e anche ID della sessione" />
    <link uin="2v3j8not0pq_l">
      <property name="$metaclass" value="Note Link" />
      <property name="$name" value="Note Link1" />
      <participant referencedUin="delphi:e_class:src:SKeyCommon:Model.CustomerIntf.ISWSession" role="Client" />
      <participant referencedUin="design:node:::cos5pn0o0rtfp3b8h_n" role="Supplier" />
    </link>
    <link uin="6ndkh02n5ej_l">
      <property name="$metaclass" value="Note Link" />
      <property name="$name" value="Note Link2" />
      <participant referencedUin="delphi:e_class:src:SKeyCommon:Model.CustomerIntf.TSKeyClientComponent" role="Client" />
      <participant referencedUin="design:node:::cos5pn0o0rtfp3b8h_n" role="Supplier" />
    </link>
    <link uin="3cv6y45upgciq7yps_l">
      <property name="$metaclass" value="Note Link" />
      <property name="$name" value="Note Link3" />
      <participant referencedUin="delphi:e_class:src:SKeyCommon:Model.CustomerIntf.ISWSessionManager" role="Client" />
      <participant referencedUin="design:node:::cos5pn0o0rtfp3b8h_n" role="Supplier" />
    </link>
  </node>
  <node uin="aaqq27bxril5zgte_n">
    <property name="$metaclass" value="Note" />
    <property name="$name" value="Note5" />
    <property name="$note_text" value="Essendoci le proprietà ActiveSince&#xD;&#xA;e Expiration il programma è&#xD;&#xA;al sicuro anche se l'utente tenta di&#xD;&#xA;mandare indietro l'orologio del PC&#xD;&#xA;" />
    <link uin="bai36javg97k9vu5s_l">
      <property name="$metaclass" value="Note Link" />
      <property name="$name" value="Note Link1" />
      <participant referencedUin="delphi:e_class:src:SKeyCommon:Model.CustomerIntf.ISWSession" role="Client" />
      <participant referencedUin="design:node:::aaqq27bxril5zgte_n" role="Supplier" />
    </link>
  </node>
  <node uin="f7j0mtt505p_n">
    <property name="$metaclass" value="Note" />
    <property name="$name" value="Note6" />
    <property name="$note_text" value="All'avvio il componente cerca un file con l'ultima sessione salvata,&#xD;&#xA;se lo trova lo carica come sessione corrente (sempre che non sia scaduta).&#xD;&#xA;In ogni caso cerca di contattare il session server per ottenrer un rifresco della sessione&#xD;&#xA;oppure una nuova sessione (se quella precedente non è stata trovat oppure è scaduta).&#xD;&#xA;Se il session server gli da una nuova sessione o gli rinfresca l'attuale allor salva su file locale la sessione stessa.&#xD;&#xA;Altrimenti se tutto questo fallisce non autorizza il programma a girare.&#xD;&#xA;Il nome del file dove salva la sessione localmente sarà composto dal SignHW (firma HW + OSUser) &#xD;&#xA;eventualmente con anche il AppUserName (se anche la password è specificata) in modo che possa&#xD;&#xA;ritrovare l'ultima sessione salvata in precedenza relativa allo stesso HW, stesso OS user e, se presente,&#xD;&#xA;stesso AppUser.&#xD;&#xA;NB: Per proteggere dall'accesso concorrente il file meglio proteggerlo con un mutex?&#xD;&#xA;&#xD;&#xA;" />
    <link uin="p3z480901c5qer2uq_l">
      <property name="$metaclass" value="Note Link" />
      <property name="$name" value="Note Link1" />
      <participant referencedUin="delphi:e_class:src:SKeyCommon:Model.CustomerIntf.TSKeyClientComponent" role="Client" />
      <participant referencedUin="design:node:::f7j0mtt505p_n" role="Supplier" />
    </link>
  </node>
  <node uin="p03jbs5g5mlxz0hps_n">
    <property name="$metaclass" value="Note" />
    <property name="$name" value="Note7" />
    <property name="$note_text" value="Quando si persiste una licenza&#xD;&#xA;non vengono automaticamente&#xD;&#xA;persistite anche le sessioni&#xD;&#xA;perchè [ioLoadOnly] quindi per&#xD;&#xA;persistere le sessioni andrà chiamato&#xD;&#xA;il persist per la proprietà &quot;Sessions&quot;&#xD;&#xA;esplicitamente" />
    <link uin="rhyj6hz5qmn_l">
      <property name="$metaclass" value="Note Link" />
      <property name="$name" value="Note Link1" />
      <participant referencedUin="delphi:e_class:src:SKeyCommon:Model.CustomerIntf.ISWLicense" role="Client" />
      <participant referencedUin="design:node:::p03jbs5g5mlxz0hps_n" role="Supplier" />
    </link>
    <link uin="e0efkrkrp7k_l">
      <property name="$metaclass" value="Note Link" />
      <property name="$name" value="Note Link2" />
      <participant referencedUin="delphi:e_class:src:SKeyCommon:Model.CustomerIntf.ISWSession" role="Client" />
      <participant referencedUin="design:node:::p03jbs5g5mlxz0hps_n" role="Supplier" />
    </link>
  </node>
  <node uin="y0ky8ri8qtqaelb3l_n">
    <property name="$metaclass" value="Note" />
    <property name="$name" value="Note8" />
    <property name="$note_text" value="Userei un TMonitor&#xD;&#xA;per Lock e Unlock&#xD;&#xA;" />
    <link uin="iemoorh7wkh_l">
      <property name="$metaclass" value="Note Link" />
      <property name="$name" value="Note Link1" />
      <participant referencedUin="delphi:e_class:src:SKeyCommon:Model.CustomerIntf.ISWLicense" role="Client" />
      <participant referencedUin="design:node:::y0ky8ri8qtqaelb3l_n" role="Supplier" />
    </link>
  </node>
</nodeSet>